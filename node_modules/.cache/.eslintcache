[{"/Users/ivica/Desktop/dev/face-rec/src/App.js":"1","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/index.js":"2","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/App.js":"3","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/reportWebVitals.js":"4","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/Logo/Logo.js":"5","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/Register/Register.js":"6","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/Rank/Rank.js":"7","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/Navigation/Navigation.js":"8","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/ImageLinkForm/ImageLinkForm.js":"9","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/SignIn/SignIn.js":"10","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/FaceRecognition/FaceRecognition.js":"11","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/ParticleOptions/ParticleOptions.js":"12"},{"size":2929,"mtime":1646096722724,"results":"13","hashOfConfig":"14"},{"size":518,"mtime":1645898266576,"results":"15","hashOfConfig":"16"},{"size":4240,"mtime":1646800243765,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1645896710802,"results":"18","hashOfConfig":"16"},{"size":552,"mtime":1646094566367,"results":"19","hashOfConfig":"16"},{"size":3789,"mtime":1646681143286,"results":"20","hashOfConfig":"16"},{"size":339,"mtime":1646681137830,"results":"21","hashOfConfig":"16"},{"size":765,"mtime":1646096735449,"results":"22","hashOfConfig":"16"},{"size":772,"mtime":1645924619448,"results":"23","hashOfConfig":"16"},{"size":3478,"mtime":1646798376282,"results":"24","hashOfConfig":"16"},{"size":593,"mtime":1646080256565,"results":"25","hashOfConfig":"16"},{"size":1314,"mtime":1645907434763,"results":"26","hashOfConfig":"16"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x95492",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t6e3sz",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ivica/Desktop/dev/face-rec/src/App.js",[],[],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/index.js",[],[],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/App.js",["66"],[],"import React, { Component } from 'react'\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register'\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions';\n\n// const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nconst {ClarifaiStub, grpc} = require(\"clarifai-nodejs-grpc\")\nconst stub = ClarifaiStub.grpc()\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"Key efcab308da914eebbebf79df9f33211f\")\n\nconst handleApiCall = (req, res) => {\n  stub.PostModelOutputs({\n    model_id: \"face-detection\",\n    inputs: [{data: {image: {url: req.body.input}}}]\n  },\n  metadata,\n      (err, response) => {\n          if (err) {\n              console.log(\"Error: \" + err);\n              return;\n          }\n\n          if (response.status.code !== 10000) {\n              console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n              return;\n          }\n\n          console.log(\"Predicted concepts, with confidence values:\")\n          for (const c of response.outputs[0].data.concepts) {\n              console.log(c.name + \": \" + c.value);\n          }\n          res.json(response)\n      }\n  )\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFaceData = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFaceData.left_col * width,\n      topRow: clarifaiFaceData.top_row * height,\n      rightCol: width - (clarifaiFaceData.right_col * width),\n      bottomRow: height - (clarifaiFaceData.bottom_row * height)\n    };\n  }\n\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input})\n    // app.models\n    // .predict(\n    //   Clarifai.FACE_DETECT_MODEL,\n    //   this.state.input)\n    //   .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    //   .catch(err => console.log(err));\n  }\n  \n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n    \n  render() {\n    const { isSignedIn, imageURL, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles \n          params={ParticleOptions}/>\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ?<div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageURL={imageURL}/>\n            </div>\n          : (\n            route === 'signin'\n            ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/reportWebVitals.js",[],[],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/Logo/Logo.js",[],[],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/Register/Register.js",[],[],["67","68"],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/Rank/Rank.js",[],[],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/Navigation/Navigation.js",[],[],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/ImageLinkForm/ImageLinkForm.js",[],[],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/SignIn/SignIn.js",[],[],["69","70"],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/FaceRecognition/FaceRecognition.js",[],[],"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/components/ParticleOptions/ParticleOptions.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":22,"column":7,"nodeType":"73","messageId":"74","endLine":22,"endColumn":20},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},"no-unused-vars","'handleApiCall' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"no-global-assign","no-unsafe-negation"]