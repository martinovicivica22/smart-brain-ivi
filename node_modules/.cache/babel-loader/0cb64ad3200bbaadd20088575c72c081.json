{"ast":null,"code":"var _jsxFileName = \"/Users/ivica/Desktop/dev/face-rec/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions'; // const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ClarifaiStub,\n  grpc\n} = require(\"clarifai-nodejs-grpc\");\n\nconst stub = ClarifaiStub.grpc();\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"efcab308da914eebbebf79df9f33211f\");\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      console.log('click');\n      stub.PostModelOutputs({\n        // This is the model ID of a publicly available General model. You may use any other public or custom model ID.\n        model_id: \"aaa03c23b3724a16a56b629203edc62c\",\n        inputs: [{\n          data: {\n            image: {\n              url: \"https://samples.clarifai.com/dog2.jpeg\"\n            }\n          }\n        }]\n      }, metadata, (err, response) => {\n        if (err) {\n          console.log(\"Error: \" + err);\n          return;\n        }\n\n        if (response.status.code !== 10000) {\n          console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n          return;\n        }\n\n        console.log(\"Predicted concepts, with confidence values:\");\n\n        for (const c of response.outputs[0].data.concepts) {\n          console.log(c.name + \": \" + c.value);\n        }\n      }); // app.models.predict(\"efcab308da914eebbebf79df9f33211f\", \"https://samples.clarifai.com/face-det.jpg\").then(\n      //   function(response) {\n      //   },\n      //   function(err) {\n      //   }\n      // )\n    };\n\n    this.state = {\n      input: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        params: ParticleOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivica/Desktop/dev/face-rec/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","ParticleOptions","ClarifaiStub","grpc","require","stub","metadata","Metadata","set","App","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","PostModelOutputs","model_id","inputs","data","image","url","err","response","status","code","description","details","c","outputs","concepts","name","state","input","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,eAAP,MAA4B,8CAA5B,C,CAGA;AACA;AACA;;;;AAEA,MAAM;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,IAAuBC,OAAO,CAAC,sBAAD,CAApC;;AAEA,MAAMC,IAAI,GAAGH,YAAY,CAACC,IAAb,EAAb;AAEA,MAAMG,QAAQ,GAAG,IAAIH,IAAI,CAACI,QAAT,EAAjB;AACAD,QAAQ,CAACE,GAAT,CAAa,eAAb,EAA8B,kCAA9B;;AAEA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAC1Be,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,aAPc,GAOGC,KAAD,IAAW;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACD,KATa;;AAAA,SAWdC,cAXc,GAWG,MAAM;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAT,MAAAA,IAAI,CAACa,gBAAL,CACE;AACI;AACAC,QAAAA,QAAQ,EAAE,kCAFd;AAGIC,QAAAA,MAAM,EAAE,CAAC;AAACC,UAAAA,IAAI,EAAE;AAACC,YAAAA,KAAK,EAAE;AAACC,cAAAA,GAAG,EAAE;AAAN;AAAR;AAAP,SAAD;AAHZ,OADF,EAMEjB,QANF,EAOE,CAACkB,GAAD,EAAMC,QAAN,KAAmB;AACf,YAAID,GAAJ,EAAS;AACLX,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAYU,GAAxB;AACA;AACH;;AAED,YAAIC,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,KAAyB,KAA7B,EAAoC;AAChCd,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BW,QAAQ,CAACC,MAAT,CAAgBE,WAA7C,GAA2D,IAA3D,GAAkEH,QAAQ,CAACC,MAAT,CAAgBG,OAA9F;AACA;AACH;;AAEDhB,QAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;;AACA,aAAK,MAAMgB,CAAX,IAAgBL,QAAQ,CAACM,OAAT,CAAiB,CAAjB,EAAoBV,IAApB,CAAyBW,QAAzC,EAAmD;AAC/CnB,UAAAA,OAAO,CAACC,GAAR,CAAYgB,CAAC,CAACG,IAAF,GAAS,IAAT,GAAgBH,CAAC,CAACd,KAA9B;AACH;AACJ,OAtBH,EAFqB,CA0BrB;AACA;AACA;AACA;AACA;AACA;AACD,KA3Ca;;AAEZ,SAAKkB,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAyCDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,MAAM,EAAEnC;AADV;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,aAAD;AACE,QAAA,aAAa,EAAE,KAAKU,aADtB;AAEE,QAAA,cAAc,EAAE,KAAKM;AAFvB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAhEyB;;AAmE5B,eAAeR,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions'\n\n\n// const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nconst {ClarifaiStub, grpc} = require(\"clarifai-nodejs-grpc\");\n\nconst stub = ClarifaiStub.grpc();\n\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"efcab308da914eebbebf79df9f33211f\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    console.log('click');\n    stub.PostModelOutputs(\n      {\n          // This is the model ID of a publicly available General model. You may use any other public or custom model ID.\n          model_id: \"aaa03c23b3724a16a56b629203edc62c\",\n          inputs: [{data: {image: {url: \"https://samples.clarifai.com/dog2.jpeg\"}}}]\n      },\n      metadata,\n      (err, response) => {\n          if (err) {\n              console.log(\"Error: \" + err);\n              return;\n          }\n  \n          if (response.status.code !== 10000) {\n              console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n              return;\n          }\n  \n          console.log(\"Predicted concepts, with confidence values:\")\n          for (const c of response.outputs[0].data.concepts) {\n              console.log(c.name + \": \" + c.value);\n          }\n      }\n  );\n    // app.models.predict(\"efcab308da914eebbebf79df9f33211f\", \"https://samples.clarifai.com/face-det.jpg\").then(\n    //   function(response) {\n    //   },\n    //   function(err) {\n    //   }\n    // )\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles \n          params={ParticleOptions}/>\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}\n        />\n        {/*\n        \n        <FaceRecognition />*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}