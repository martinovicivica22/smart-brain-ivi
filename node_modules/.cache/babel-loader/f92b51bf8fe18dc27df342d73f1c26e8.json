{"ast":null,"code":"const SUCCESS_CODES = [200, 201];\nmodule.exports = {\n  isSuccess: response => {\n    return SUCCESS_CODES.indexOf(response.status) > -1;\n  },\n  deleteEmpty: function (obj) {\n    let strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    Object.keys(obj).forEach(key => {\n      if (obj[key] === null || obj[key] === undefined || strict === true && (obj[key] === '' || obj[key].length === 0 || Object.keys(obj[key]).length === 0)) {\n        delete obj[key];\n      }\n    });\n  },\n  clone: obj => {\n    let keys = Object.keys(obj);\n    let copy = {};\n    keys.forEach(k => {\n      copy[k] = obj[k];\n    });\n    return copy;\n  },\n  checkType: (regex, val) => {\n    if (regex instanceof RegExp === false) {\n      regex = new RegExp(regex);\n    }\n\n    return regex.test(Object.prototype.toString.call(val));\n  }\n};","map":{"version":3,"sources":["/Users/ivica/Desktop/dev/face-rec/node_modules/clarifai/src/helpers.js"],"names":["SUCCESS_CODES","module","exports","isSuccess","response","indexOf","status","deleteEmpty","obj","strict","Object","keys","forEach","key","undefined","length","clone","copy","k","checkType","regex","val","RegExp","test","prototype","toString","call"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAAC,GAAD,EAAM,GAAN,CAAtB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,SAAS,EAAGC,QAAD,IAAc;AACvB,WAAOJ,aAAa,CAACK,OAAd,CAAsBD,QAAQ,CAACE,MAA/B,IAAyC,CAAC,CAAjD;AACD,GAHc;AAIfC,EAAAA,WAAW,EAAE,UAACC,GAAD,EAAyB;AAAA,QAAnBC,MAAmB,uEAAV,KAAU;AACpCC,IAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAA0BC,GAAD,IAAS;AAChC,UAAIL,GAAG,CAACK,GAAD,CAAH,KAAa,IAAb,IACFL,GAAG,CAACK,GAAD,CAAH,KAAaC,SADX,IAEFL,MAAM,KAAK,IAAX,KACAD,GAAG,CAACK,GAAD,CAAH,KAAa,EAAb,IACAL,GAAG,CAACK,GAAD,CAAH,CAASE,MAAT,KAAoB,CADpB,IAEAL,MAAM,CAACC,IAAP,CAAYH,GAAG,CAACK,GAAD,CAAf,EAAsBE,MAAtB,KAAiC,CAHjC,CAFF,EAKuC;AACrC,eAAOP,GAAG,CAACK,GAAD,CAAV;AACD;AACF,KATD;AAUD,GAfc;AAgBfG,EAAAA,KAAK,EAAGR,GAAD,IAAS;AACd,QAAIG,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAAX;AACA,QAAIS,IAAI,GAAG,EAAX;AACAN,IAAAA,IAAI,CAACC,OAAL,CAAcM,CAAD,IAAO;AAClBD,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUV,GAAG,CAACU,CAAD,CAAb;AACD,KAFD;AAGA,WAAOD,IAAP;AACD,GAvBc;AAwBfE,EAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACzB,QAAKD,KAAK,YAAYE,MAAlB,KAA8B,KAAlC,EAAyC;AACvCF,MAAAA,KAAK,GAAG,IAAIE,MAAJ,CAAWF,KAAX,CAAR;AACD;;AACD,WAAOA,KAAK,CAACG,IAAN,CAAWb,MAAM,CAACc,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,GAA/B,CAAX,CAAP;AACD;AA7Bc,CAAjB","sourcesContent":["const SUCCESS_CODES = [200, 201];\n\nmodule.exports = {\n  isSuccess: (response) => {\n    return SUCCESS_CODES.indexOf(response.status) > -1;\n  },\n  deleteEmpty: (obj, strict = false) => {\n    Object.keys(obj).forEach((key) => {\n      if (obj[key] === null ||\n        obj[key] === undefined ||\n        strict === true && (\n        obj[key] === '' ||\n        obj[key].length === 0 ||\n        Object.keys(obj[key]).length === 0)) {\n        delete obj[key];\n      }\n    });\n  },\n  clone: (obj) => {\n    let keys = Object.keys(obj);\n    let copy = {};\n    keys.forEach((k) => {\n      copy[k] = obj[k];\n    });\n    return copy;\n  },\n  checkType: (regex, val) => {\n    if ((regex instanceof RegExp) === false) {\n      regex = new RegExp(regex);\n    }\n    return regex.test(Object.prototype.toString.call(val));\n  }\n};\n"]},"metadata":{},"sourceType":"script"}