{"ast":null,"code":"var _jsxFileName = \"/Users/ivica/Desktop/dev/face-rec/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions'; // const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  grpc\n} = require(\"clarifai-nodejs-grpc\");\n\nconst service = require(\"clarifai-nodejs-grpc/proto/clarifai/api/service_pb\");\n\nconst resources = require(\"clarifai-nodejs-grpc/proto/clarifai/api/resources_pb\");\n\nconst {\n  StatusCode\n} = require(\"clarifai-nodejs-grpc/proto/clarifai/api/status/status_code_pb\");\n\nconst {\n  V2Client\n} = require(\"clarifai-nodejs-grpc/proto/clarifai/api/service_grpc_pb\");\n\nconst clarifai = new V2Client(\"api.clarifai.com\", grpc.ChannelCredentials.createSsl());\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"efcab308da914eebbebf79df9f33211f\");\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      console.log('click');\n      const request = new service.PostModelOutputsRequest();\n      request.setModelId(\"efcab308da914eebbebf79df9f33211f\");\n      request.addInputs(new resources.Input().setData(new resources.Data().setImage(new resources.Image().setUrl(\"https://samples.clarifai.com/dog2.jpeg\"))));\n      clarifai.postModelOutputs(request, metadata, (error, response) => {\n        if (error) {\n          throw error;\n        }\n\n        if (response.getStatus().getCode() !== StatusCode.SUCCESS) {\n          throw \"Error: \" + response.getStatus();\n        }\n\n        console.log(\"Predicted concepts, with confidence values:\");\n\n        for (const concept of response.getOutputsList()[0].getData().getConceptsList()) {\n          console.log(concept.getName() + \" \" + concept.getValue());\n        }\n      });\n    };\n\n    this.state = {\n      input: ''\n    };\n  }\n\n  // app.models.predict(\"efcab308da914eebbebf79df9f33211f\", \"https://samples.clarifai.com/face-det.jpg\").then(\n  //   function(response) {\n  //   },\n  //   function(err) {\n  //   }\n  // )\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        params: ParticleOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivica/Desktop/dev/face-rec/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","ParticleOptions","grpc","require","service","resources","StatusCode","V2Client","clarifai","ChannelCredentials","createSsl","metadata","Metadata","set","App","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","request","PostModelOutputsRequest","setModelId","addInputs","Input","setData","Data","setImage","Image","setUrl","postModelOutputs","error","response","getStatus","getCode","SUCCESS","concept","getOutputsList","getData","getConceptsList","getName","getValue","state","input","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions'\n\n\n// const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nconst {grpc} = require(\"clarifai-nodejs-grpc\");\nconst service = require(\"clarifai-nodejs-grpc/proto/clarifai/api/service_pb\");\nconst resources = require(\"clarifai-nodejs-grpc/proto/clarifai/api/resources_pb\");\nconst {StatusCode} = require(\"clarifai-nodejs-grpc/proto/clarifai/api/status/status_code_pb\");\nconst {V2Client} = require(\"clarifai-nodejs-grpc/proto/clarifai/api/service_grpc_pb\");\n\nconst clarifai = new V2Client(\"api.clarifai.com\", grpc.ChannelCredentials.createSsl());\n\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"efcab308da914eebbebf79df9f33211f\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    console.log('click');\n    const request = new service.PostModelOutputsRequest();\n      request.setModelId(\"efcab308da914eebbebf79df9f33211f\");\n      request.addInputs(\n          new resources.Input()\n              .setData(\n                  new resources.Data()\n                      .setImage(\n                          new resources.Image()\n                              .setUrl(\"https://samples.clarifai.com/dog2.jpeg\")\n                      )\n              )\n      )\n\n      clarifai.postModelOutputs(\n          request,\n          metadata,\n          (error, response) => {\n              if (error) {\n                  throw error;\n              }\n\n              if (response.getStatus().getCode() !== StatusCode.SUCCESS) {\n                  throw \"Error: \" + response.getStatus();\n              }\n\n              console.log(\"Predicted concepts, with confidence values:\")\n              for (const concept of response.getOutputsList()[0].getData().getConceptsList()) {\n                  console.log(concept.getName() + \" \" + concept.getValue());\n              }\n          }\n      )\n    };\n    \n    // app.models.predict(\"efcab308da914eebbebf79df9f33211f\", \"https://samples.clarifai.com/face-det.jpg\").then(\n    //   function(response) {\n    //   },\n    //   function(err) {\n    //   }\n    // )\n    \n  render() {\n    return (\n      <div className=\"App\">\n        <Particles \n          params={ParticleOptions}/>\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}\n        />\n        {/*\n        \n        <FaceRecognition />*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}