{"ast":null,"code":"var _jsxFileName = \"/Users/ivica/Desktop/dev/face-rec/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ClarifaiStub,\n  grpc\n} = require(\"clarifai-nodejs-grpc\");\n\nconst stub = ClarifaiStub.grpc(); // This will be used by every Clarifai endpoint call.\n\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"Key {efcab308da914eebbebf79df9f33211f}\");\nstub.PostModelOutputs({\n  // This is the model ID of a publicly available General model. You may use any other public or custom model ID.\n  model_id: \"efcab308da914eebbebf79df9f33211f\",\n  inputs: [{\n    data: {\n      image: {\n        url: \"https://samples.clarifai.com/dog2.jpeg\"\n      }\n    }\n  }]\n}, metadata, (err, response) => {\n  if (err) {\n    console.log(\"Error: \" + err);\n    return;\n  }\n\n  if (response.status.code !== 10000) {\n    console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n    return;\n  }\n\n  console.log(\"Predicted concepts, with confidence values:\");\n\n  for (const c of response.outputs[0].data.concepts) {\n    console.log(c.name + \": \" + c.value);\n  }\n}); // const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n\n    this.onButtonSubmit = () => {\n      console.log('click');\n    };\n\n    this.state = {\n      input: ''\n    };\n  }\n\n  // app.models.predict(\"efcab308da914eebbebf79df9f33211f\", \"https://samples.clarifai.com/face-det.jpg\").then(\n  //   function(response) {\n  //   },\n  //   function(err) {\n  //   }\n  // )\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        params: ParticleOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivica/Desktop/dev/face-rec/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","Particles","ParticleOptions","ClarifaiStub","grpc","require","stub","metadata","Metadata","set","PostModelOutputs","model_id","inputs","data","image","url","err","response","console","log","status","code","description","details","c","outputs","concepts","name","value","App","constructor","onInputChange","event","target","onButtonSubmit","state","input","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;;;AAEA,MAAM;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,IAAuBC,OAAO,CAAC,sBAAD,CAApC;;AAEA,MAAMC,IAAI,GAAGH,YAAY,CAACC,IAAb,EAAb,C,CAEA;;AACA,MAAMG,QAAQ,GAAG,IAAIH,IAAI,CAACI,QAAT,EAAjB;AACAD,QAAQ,CAACE,GAAT,CAAa,eAAb,EAA8B,wCAA9B;AAEAH,IAAI,CAACI,gBAAL,CACE;AACI;AACAC,EAAAA,QAAQ,EAAE,kCAFd;AAGIC,EAAAA,MAAM,EAAE,CAAC;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAK,EAAE;AAACC,QAAAA,GAAG,EAAE;AAAN;AAAR;AAAP,GAAD;AAHZ,CADF,EAMER,QANF,EAOE,CAACS,GAAD,EAAMC,QAAN,KAAmB;AACf,MAAID,GAAJ,EAAS;AACLE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYH,GAAxB;AACA;AACH;;AAED,MAAIC,QAAQ,CAACG,MAAT,CAAgBC,IAAhB,KAAyB,KAA7B,EAAoC;AAChCH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BF,QAAQ,CAACG,MAAT,CAAgBE,WAA7C,GAA2D,IAA3D,GAAkEL,QAAQ,CAACG,MAAT,CAAgBG,OAA9F;AACA;AACH;;AAEDL,EAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;;AACA,OAAK,MAAMK,CAAX,IAAgBP,QAAQ,CAACQ,OAAT,CAAiB,CAAjB,EAAoBZ,IAApB,CAAyBa,QAAzC,EAAmD;AAC/CR,IAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACG,IAAF,GAAS,IAAT,GAAgBH,CAAC,CAACI,KAA9B;AACH;AACJ,CAtBH,E,CAyBA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBjC,SAAlB,CAA4B;AAC1BkC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,aAPc,GAOGC,KAAD,IAAW;AACzBd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAK,CAACC,MAAN,CAAaL,KAAzB;AACD,KATa;;AAAA,SAWdM,cAXc,GAWG,MAAM;AACrBhB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAba;;AAEZ,SAAKgB,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAUC;AACA;AACA;AACA;AACA;AACA;AAEFC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,MAAM,EAAEnC;AADV;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,aAAD;AACE,QAAA,aAAa,EAAE,KAAK6B,aADtB;AAEE,QAAA,cAAc,EAAE,KAAKG;AAFvB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAxCyB;;AA2C5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions'\n\nconst {ClarifaiStub, grpc} = require(\"clarifai-nodejs-grpc\");\n\nconst stub = ClarifaiStub.grpc();\n\n// This will be used by every Clarifai endpoint call.\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"Key {efcab308da914eebbebf79df9f33211f}\");\n\nstub.PostModelOutputs(\n  {\n      // This is the model ID of a publicly available General model. You may use any other public or custom model ID.\n      model_id: \"efcab308da914eebbebf79df9f33211f\",\n      inputs: [{data: {image: {url: \"https://samples.clarifai.com/dog2.jpeg\"}}}]\n  },\n  metadata,\n  (err, response) => {\n      if (err) {\n          console.log(\"Error: \" + err);\n          return;\n      }\n\n      if (response.status.code !== 10000) {\n          console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n          return;\n      }\n\n      console.log(\"Predicted concepts, with confidence values:\")\n      for (const c of response.outputs[0].data.concepts) {\n          console.log(c.name + \": \" + c.value);\n      }\n  }\n);\n\n// const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    console.log('click');\n  }\n    \n    // app.models.predict(\"efcab308da914eebbebf79df9f33211f\", \"https://samples.clarifai.com/face-det.jpg\").then(\n    //   function(response) {\n    //   },\n    //   function(err) {\n    //   }\n    // )\n    \n  render() {\n    return (\n      <div className=\"App\">\n        <Particles \n          params={ParticleOptions}/>\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}\n        />\n        {/*\n        \n        <FaceRecognition />*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}