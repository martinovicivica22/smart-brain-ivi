{"ast":null,"code":"var _jsxFileName = \"/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions'; // const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ClarifaiStub,\n  grpc\n} = require(\"clarifai-nodejs-grpc\");\n\nconst stub = ClarifaiStub.grpc();\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"Key efcab308da914eebbebf79df9f33211f\");\n\nconst handleApiCall = (req, res) => {\n  stub.PostModelOutputs({\n    model_id: \"face-detection\",\n    inputs: [{\n      data: {\n        image: {\n          url: req.body.input\n        }\n      }\n    }]\n  }, metadata, (err, response) => {\n    if (err) {\n      console.log(\"Error: \" + err);\n      return;\n    }\n\n    if (response.status.code !== 10000) {\n      console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n      return;\n    }\n\n    console.log(\"Predicted concepts, with confidence values:\");\n\n    for (const c of response.outputs[0].data.concepts) {\n      console.log(c.name + \": \" + c.value);\n    }\n\n    res.json(response);\n  });\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFaceData = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFaceData.left_col * width,\n        topRow: clarifaiFaceData.top_row * height,\n        rightCol: width - clarifaiFaceData.right_col * width,\n        bottomRow: height - clarifaiFaceData.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      }); // app.models\n      // .predict(\n      //   Clarifai.FACE_DETECT_MODEL,\n      //   this.state.input)\n      //   .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      //   .catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageURL,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        params: ParticleOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageURL: imageURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ivica/Desktop/dev/Smart Brain/Frontend/src/App.js"],"names":["React","Component","Navigation","SignIn","Register","Logo","ImageLinkForm","Rank","FaceRecognition","Particles","ParticleOptions","ClarifaiStub","grpc","require","stub","metadata","Metadata","set","handleApiCall","req","res","PostModelOutputs","model_id","inputs","data","image","url","body","input","err","response","console","log","status","code","description","details","c","outputs","concepts","name","value","json","App","constructor","loadUser","setState","user","id","email","entries","joined","calculateFaceLocation","clarifaiFaceData","regions","region_info","bounding_box","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","target","onButtonSubmit","imageURL","state","onRouteChange","route","isSignedIn","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,eAAP,MAA4B,8CAA5B,C,CAEA;AACA;AACA;;;;AAEA,MAAM;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,IAAuBC,OAAO,CAAC,sBAAD,CAApC;;AACA,MAAMC,IAAI,GAAGH,YAAY,CAACC,IAAb,EAAb;AACA,MAAMG,QAAQ,GAAG,IAAIH,IAAI,CAACI,QAAT,EAAjB;AACAD,QAAQ,CAACE,GAAT,CAAa,eAAb,EAA8B,sCAA9B;;AAEA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClCN,EAAAA,IAAI,CAACO,gBAAL,CAAsB;AACpBC,IAAAA,QAAQ,EAAE,gBADU;AAEpBC,IAAAA,MAAM,EAAE,CAAC;AAACC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAE;AAACC,UAAAA,GAAG,EAAEP,GAAG,CAACQ,IAAJ,CAASC;AAAf;AAAR;AAAP,KAAD;AAFY,GAAtB,EAIAb,QAJA,EAKI,CAACc,GAAD,EAAMC,QAAN,KAAmB;AACf,QAAID,GAAJ,EAAS;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYH,GAAxB;AACA;AACH;;AAED,QAAIC,QAAQ,CAACG,MAAT,CAAgBC,IAAhB,KAAyB,KAA7B,EAAoC;AAChCH,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BF,QAAQ,CAACG,MAAT,CAAgBE,WAA7C,GAA2D,IAA3D,GAAkEL,QAAQ,CAACG,MAAT,CAAgBG,OAA9F;AACA;AACH;;AAEDL,IAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;;AACA,SAAK,MAAMK,CAAX,IAAgBP,QAAQ,CAACQ,OAAT,CAAiB,CAAjB,EAAoBd,IAApB,CAAyBe,QAAzC,EAAmD;AAC/CR,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACG,IAAF,GAAS,IAAT,GAAgBH,CAAC,CAACI,KAA9B;AACH;;AACDrB,IAAAA,GAAG,CAACsB,IAAJ,CAASZ,QAAT;AACH,GArBL;AAuBD,CAxBD;;AA2BA,MAAMa,GAAN,SAAkB1C,SAAlB,CAA4B;AAC1B2C,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkBdC,QAlBc,GAkBFrB,IAAD,IAAU;AACnB,WAAKsB,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AACjBC,UAAAA,EAAE,EAAExB,IAAI,CAACwB,EADQ;AAEjBR,UAAAA,IAAI,EAAEhB,IAAI,CAACgB,IAFM;AAGjBS,UAAAA,KAAK,EAAEzB,IAAI,CAACyB,KAHK;AAIjBC,UAAAA,OAAO,EAAE1B,IAAI,CAAC0B,OAJG;AAKjBC,UAAAA,MAAM,EAAE3B,IAAI,CAAC2B;AALI;AAAP,OAAd;AAOD,KA1Ba;;AAAA,SA4BdC,qBA5Bc,GA4BW5B,IAAD,IAAU;AAChC,YAAM6B,gBAAgB,GAAG7B,IAAI,CAACM,QAAL,CAAcQ,OAAd,CAAsB,CAAtB,EAAyBd,IAAzB,CAA8B8B,OAA9B,CAAsC,CAAtC,EAAyCC,WAAzC,CAAqDC,YAA9E;AACA,YAAM/B,KAAK,GAAGgC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACnC,KAAK,CAACkC,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACnC,KAAK,CAACoC,MAAP,CAArB;AACA,aAAO;AACLC,QAAAA,OAAO,EAAET,gBAAgB,CAACU,QAAjB,GAA4BJ,KADhC;AAELK,QAAAA,MAAM,EAAEX,gBAAgB,CAACY,OAAjB,GAA2BJ,MAF9B;AAGLK,QAAAA,QAAQ,EAAEP,KAAK,GAAIN,gBAAgB,CAACc,SAAjB,GAA6BR,KAH3C;AAILS,QAAAA,SAAS,EAAEP,MAAM,GAAIR,gBAAgB,CAACgB,UAAjB,GAA8BR;AAJ9C,OAAP;AAMD,KAvCa;;AAAA,SA0CdS,cA1Cc,GA0CIC,GAAD,IAAS;AACxB,WAAKzB,QAAL,CAAc;AAACyB,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACD,KA5Ca;;AAAA,SA8CdC,aA9Cc,GA8CGC,KAAD,IAAW;AACzB,WAAK3B,QAAL,CAAc;AAAClB,QAAAA,KAAK,EAAE6C,KAAK,CAACC,MAAN,CAAajC;AAArB,OAAd;AACD,KAhDa;;AAAA,SAkDdkC,cAlDc,GAkDG,MAAM;AACrB,WAAK7B,QAAL,CAAc;AAAC8B,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWjD;AAAtB,OAAd,EADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACD,KA1Da;;AAAA,SA6DdkD,aA7Dc,GA6DGC,KAAD,IAAW;AACzB,UAAIA,KAAK,KAAK,SAAd,EAAyB;AACvB,aAAKjC,QAAL,CAAc;AAACkC,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD,OAFD,MAEO,IAAID,KAAK,KAAK,MAAd,EAAsB;AAC3B,aAAKjC,QAAL,CAAc;AAACkC,UAAAA,UAAU,EAAE;AAAb,SAAd;AACD;;AACD,WAAKlC,QAAL,CAAc;AAACiC,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD,KApEa;;AAEZ,SAAKF,KAAL,GAAa;AACXjD,MAAAA,KAAK,EAAE,EADI;AAEXgD,MAAAA,QAAQ,EAAE,EAFC;AAGXL,MAAAA,GAAG,EAAE,EAHM;AAIXQ,MAAAA,KAAK,EAAE,QAJI;AAKXC,MAAAA,UAAU,EAAE,KALD;AAMXjC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE,EADA;AAEJR,QAAAA,IAAI,EAAE,EAFF;AAGJS,QAAAA,KAAK,EAAE,EAHH;AAIJC,QAAAA,OAAO,EAAE,CAJL;AAKJC,QAAAA,MAAM,EAAE;AALJ;AANK,KAAb;AAcD;;AAsDD8B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA,UAAF;AAAcJ,MAAAA,QAAd;AAAwBG,MAAAA,KAAxB;AAA+BR,MAAAA;AAA/B,QAAuC,KAAKM,KAAlD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,MAAM,EAAEnE;AADV;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEsE,UAAxB;AAAoC,QAAA,aAAa,EAAE,KAAKF;AAAxD;AAAA;AAAA;AAAA;AAAA,cAHF,EAIIC,KAAK,KAAK,MAAV,gBACC;AAAA,gCACG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAW9B,IAAX,CAAgBP,IAA5B;AAAkC,UAAA,OAAO,EAAE,KAAKqC,KAAL,CAAW9B,IAAX,CAAgBG;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG,QAAC,aAAD;AACE,UAAA,aAAa,EAAE,KAAKsB,aADtB;AAEE,UAAA,cAAc,EAAE,KAAKG;AAFvB;AAAA;AAAA;AAAA;AAAA,gBAHH,eAOG,QAAC,eAAD;AAAiB,UAAA,GAAG,EAAEJ,GAAtB;AAA2B,UAAA,QAAQ,EAAEK;AAArC;AAAA;AAAA;AAAA;AAAA,gBAPH;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAWEG,KAAK,KAAK,QAAV,gBACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKlC,QAAvB;AAAiC,QAAA,aAAa,EAAE,KAAKiC;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,gBAEE,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKjC,QAAzB;AAAmC,QAAA,aAAa,EAAE,KAAKiC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAjBR;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAhGyB;;AAmG5B,eAAenC,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register'\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from \"react-tsparticles\";\nimport ParticleOptions from './components/ParticleOptions/ParticleOptions';\n\n// const app = new Clarifai.App({\n//   apikey: 'efcab308da914eebbebf79df9f33211f'\n// });\n\nconst {ClarifaiStub, grpc} = require(\"clarifai-nodejs-grpc\")\nconst stub = ClarifaiStub.grpc()\nconst metadata = new grpc.Metadata();\nmetadata.set(\"authorization\", \"Key efcab308da914eebbebf79df9f33211f\")\n\nconst handleApiCall = (req, res) => {\n  stub.PostModelOutputs({\n    model_id: \"face-detection\",\n    inputs: [{data: {image: {url: req.body.input}}}]\n  },\n  metadata,\n      (err, response) => {\n          if (err) {\n              console.log(\"Error: \" + err);\n              return;\n          }\n\n          if (response.status.code !== 10000) {\n              console.log(\"Received failed status: \" + response.status.description + \"\\n\" + response.status.details);\n              return;\n          }\n\n          console.log(\"Predicted concepts, with confidence values:\")\n          for (const c of response.outputs[0].data.concepts) {\n              console.log(c.name + \": \" + c.value);\n          }\n          res.json(response)\n      }\n  )\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFaceData = data.response.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFaceData.left_col * width,\n      topRow: clarifaiFaceData.top_row * height,\n      rightCol: width - (clarifaiFaceData.right_col * width),\n      bottomRow: height - (clarifaiFaceData.bottom_row * height)\n    };\n  }\n\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input})\n    // app.models\n    // .predict(\n    //   Clarifai.FACE_DETECT_MODEL,\n    //   this.state.input)\n    //   .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    //   .catch(err => console.log(err));\n  }\n  \n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n    \n  render() {\n    const { isSignedIn, imageURL, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles \n          params={ParticleOptions}/>\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ?<div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageURL={imageURL}/>\n            </div>\n          : (\n            route === 'signin'\n            ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}